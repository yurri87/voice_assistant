# -*- coding: utf-8 -*-

import os
import random
import speech_recognition

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
import sys
sys.stdout.reconfigure(encoding='utf-8')

sr = speech_recognition.Recognizer()
sr.pause_threshold = 0.5

commands_dict = {
    'commands': {
        'greeting': ['–ø—Ä–∏–≤–µ—Ç', '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é'],
        'create_task': ['–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', '—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É', '–∑–∞–º–µ—Ç–∫–∞'],
        'play_music': ['–≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É', '–¥–∏—Å–∫–æ—Ç–µ–∫–∞'],
        'exit': ['–≤—ã—Ö–æ–¥', '—Å—Ç–æ–ø', '–∑–∞–≤–µ—Ä—à–∏—Ç—å']
    }
}


def listen_command():
    """–§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É"""
    
    try:
        with speech_recognition.Microphone() as mic:
            print("–°–ª—É—à–∞—é...")
            sr.adjust_for_ambient_noise(source=mic, duration=0.5)
            audio = sr.listen(source=mic)
            print("–†–∞—Å–ø–æ–∑–Ω–∞—é...")
            query = sr.recognize_google(audio_data=audio, language='ru-RU').lower()
            print(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {query}")
        return query
    except speech_recognition.UnknownValueError:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")
        return 'Damn... –ù–µ –ø–æ–Ω—è–ª —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª :/'
    except speech_recognition.RequestError as e:
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏; {e}")
        return "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏"


def greeting():
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    
    return '–ü—Ä–∏–≤–µ—Ç –Ω–∏—â–µ–±—Ä–æ–¥!'


def create_task():
    """–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–∫–µ –¥–µ–ª"""
    
    print('–ß—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–ª?')
    
    query = listen_command()
        
    with open('todo-list.txt', 'a', encoding='utf-8') as file:
        file.write(f'‚ùóÔ∏è {query}\n')
        
    return f'–ó–∞–¥–∞—á–∞ {query} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ todo-list!'


def play_music():
    """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π mp3 —Ñ–∞–π–ª"""
    
    files = os.listdir('music')
    random_file = f'music\\{random.choice(files)}'
    os.system(f'start "" "{random_file}"')
    
    return f'–¢–∞–Ω—Ü—É–µ–º –ø–æ–¥ {os.path.basename(random_file)} üîäüîäüîä'


def main():
    print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–ª—É—à–∞–µ—Ç. –°–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É...")
    while True:
        try:
            query = listen_command()
            
            if query in commands_dict['commands']['exit']:
                print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            command_found = False
            for k, v in commands_dict['commands'].items():
                if query in v:
                    result = globals()[k]()
                    print(result)
                    command_found = True
                    break
            
            if not command_found:
                print("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
            
            print("\n–ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ...")
        except KeyboardInterrupt:
            print("\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

if __name__ == '__main__':
    main()
